{"version":3,"sources":["utils/StudentContext.js","components/StudentCard.js","components/AddTag/index.js","components/StudentAccordion/Index.js","components/DisplayStudents.js","utils/api.js","components/Search/SearchStudent.js","components/StudentsContainer/Index.js","App.js","registerServiceWorker.js","index.js"],"names":["StudentContext","createContext","StudentProvider","children","useState","list","setList","Provider","value","StudentCard","props","Row","Col","style","alignSelf","xs","Card","Img","border","class","src","pic","height","width","borderColor","md","Body","marginLeft","Title","fontSize","fontWeight","firstName","toUpperCase","lastName","Text","color","fontFamily","email","company","skill","average","AddTag","tagContent","setTagContent","tag","student","tags","marginBottom","length","map","index","Badge","bg","Form","Control","className","type","placeholder","onChange","event","target","handleChange","onKeyDown","key","preventDefault","console","log","push","StudentAccordion","Accordion","Item","eventKey","Header","id","grades","grade","DisplayStudents","students","useContext","fetch","SearchStudent","allData","filteredData","setFilteredData","context","useEffect","api","then","response","json","res","forEach","includes","reduce","a","b","Number","catch","error","resultName","filter","data","search","toLowerCase","handleSearch","resultTag","taggedStudent","element","trim","handleSearchTag","StudentContainer","Container","App","backgroundColor","alignItems","justifyContent","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d8ba799f.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const StudentContext = createContext();\n\n// This context provider is passed to any component requiring the context\nexport const StudentProvider = ({ children }) => {\n  const [list, setList] = useState( [] );\n\n  return (\n    <StudentContext.Provider\n      value={{\n        list,\n        setList,\n      }}\n    >\n      {children}\n    </StudentContext.Provider>\n  );\n};","import React from \"react\"\nimport Card from 'react-bootstrap/Card'\nimport { Row, Col } from 'react-bootstrap/'\n\nfunction StudentCard(props) {\n    return (\n        <Row>\n            <Col style={{alignSelf: \"center\"}} xs={2}>\n                <Card.Img border=\"1px\" class=\"rounded-circle\" src={props.pic} height=\"90px\" width=\"90px\" style={{borderColor: \"lightgrey\"}}/>\n            </Col>\n            <Col md={10}>\n                <Card.Body style={{marginLeft: \"20px\"}}>\n                    <Card.Title style={{fontSize: '28px', fontWeight: \"bold\"}}>\n                        {`${props.firstName.toUpperCase()} ${props.lastName.toUpperCase()}`}\n                    </Card.Title>\n                    <Card.Text style={{marginLeft: \"15px\", color: \"grey\", fontFamily: 'Raleway', fontSize: \"12px\"}}>\n                        {`Email: ${props.email}`}\n                        <br />\n                        {`Company: ${props.company}`}\n                        <br />\n                        {`Skill: ${props.skill}`}\n                        <br />\n                        {`Average: ${props.average}`}\n                    </Card.Text>\n                </Card.Body>\n            </Col>\n        </Row>\n    )\n}\n\nexport default StudentCard;","import React, { useState } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport './index.css'\nimport Badge from 'react-bootstrap/Badge'\n\nfunction AddTag(props) {\n  const [ tagContent, setTagContent ] = useState()\n  const [ tag, setTag ] = useState([]);\n\n  const student = props.student;\n  student.tags = tag;\n   \n  const handleChange = (event) => {\n    setTagContent(event.target.value)\n  }\n  \n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      console.log(tag)\n      student.tags.push(tagContent);\n      setTagContent(\"\")\n      console.log('do validate')\n    }\n  }\n\n  return (\n    <div>\n      <p style={{marginLeft: '140px', marginBottom: \"5px\"}}>\n        {student.tags.length > 0 &&\n          student.tags.map(function (tag, index) {\n            return (\n              <Badge key={index} bg=\"secondary\">\n                {tag}\n              </Badge>\n            )\n          })\n        }\n      </p>\n      <Form>\n        <Form.Control className=\"tag\" type=\"name\" placeholder=\"Add a tag\" value={tagContent}\n          student={props.student}\n          onChange={(event) => handleChange(event)}\n          onKeyDown={handleKeyDown}\n        />\n      </Form>\n    </div>\n  )\n}\n\nexport default AddTag;","import React from \"react\"\nimport Accordion from 'react-bootstrap/Accordion'\nimport Row from 'react-bootstrap/Row'\nimport StudentCard from \"../StudentCard\"\nimport \"./index.css\";\nimport AddTag from \"../AddTag/index.js\";\n\nfunction StudentAccordion(props) {\n\n    return (\n        <Accordion key={props.student.firstName}>\n            <Accordion.Item eventKey=\"0\">\n                <Accordion.Header>\n                    <StudentCard \n                        key={props.student.id + props.student.firstName}\n                        firstName={props.student.firstName} \n                        lastName ={props.student.lastName}\n                        pic={props.student.pic}\n                        email={props.student.email}\n                        company={props.student.company}\n                        average={`${props.student.average}%`}\n                        skill={props.student.skill}\n                    />\n                </Accordion.Header>\n                <Accordion.Body>\n                    {props.student.grades.map(function(grade, index) {\n                        return(\n                        <Row key={index}>\n                            {`Test ${index + 1}: ${grade}%`}\n                        </Row>\n                        )\n                    })}\n                </Accordion.Body>\n                <AddTag student={props.student}/>\n            </Accordion.Item>\n        </Accordion>\n    )\n}\n\nexport default StudentAccordion;","\nimport React, { useContext } from \"react\"\nimport Row from 'react-bootstrap/Row'\nimport { StudentContext } from \"../utils/StudentContext\"\nimport StudentAccordion from \"./StudentAccordion/Index\"\n\nfunction DisplayStudents() {\n  const students = useContext(StudentContext);\n    \n  return (\n      <div>\n        {/* Map each student to a row */}\n          {students.list.map(student => {\n            //Create a variable to calculate student's average\n              // let average = student.grades.reduce((a, b) => Number(a) + Number(b)) / student.grades.length;\n              return(\n                <Row key={student.id}>\n                  <StudentAccordion student={student}/>\n                </Row>\n              )\n          })\n          }\n      </div>\n  )\n}\n\nexport default DisplayStudents;\n\n   \n\n\n\n","\nexport default {\ngetStudents: function () {\n    return fetch('https://api.hatchways.io/assessment/students')\n  }\n}\n\n// const hatchwayURL = \"https://www.hatchways.io/api/assessment/students\";\n\n// const fetchRequest = {\n//     getStudents: async () => {\n//         const response = await fetch(hatchwayURL);\n//         const data = await response.json();\n//         return data;\n//     },\n// };\n// export default fetchRequest;","import React, { useState, useEffect, useContext } from \"react\"\nimport Form from \"react-bootstrap/Form\"\nimport api from \"../../utils/api\"\nimport { StudentContext } from \"../../utils/StudentContext\"\nimport './index.css'\n\nfunction SearchStudent() {\n  // const cache = useRef({})\n  const [ allData, setAllData ] = useState([]);\n  const [ filteredData, setFilteredData ] = useState(allData);\n\n  const context = useContext(StudentContext)\n\n  const handleSearch = (event) =>{\n    let value = event.target.value;\n    let resultName = [];\n\n    resultName = allData.filter((data) => {\n        console.log(data.firstName.search(value))\n      return (data.firstName + data.lastName).toLowerCase().search(value.toLowerCase()) !== -1;\n    });\n\n    setFilteredData(resultName);\n    context.setList(resultName);\n  };\n\n//   function filterByTag(arr) {\n//     return arr.filter((student) => {\n//         let isTagged = false;\n//         let lowerCasedTag;\n//         student.tags.forEach((tag) => {\n//             lowerCasedTag = tag.toLowerCase().trim();\n//             if (lowerCasedTag.includes(tagSearchInput)) {\n//                 isTagged = true;\n//             }\n//         });\n//         return isTagged;\n//     });\n// }\n// const handleSearchTag = (event) => {\n//   let value = event.target.value;\n//   filteredData = \n\n\n  const handleSearchTag = (event) => {\n    let value = event.target.value;\n    console.log(value)\n    let resultTag = [];\n    resultTag = filteredData.filter((students) => {\n      let taggedStudent = false;\n      let trimmedTag;\n      students.tags.forEach((element) => {\n        trimmedTag = element.toLowerCase().trim();\n        if (trimmedTag.includes(value)) {\n          taggedStudent = true;\n        }\n      })\n      console.log(taggedStudent)\n      return taggedStudent;\n    })\n    console.log(filteredData)\n    // setFilteredData(resultTag);\n    context.setList(resultTag);\n  };\n\n  // const initializeTags = (students) => {\n  //   let allStudents = [];\n  //   students.forEach(student => {\n  //     if (!student.tags) {\n  //       Object.assign(student, { tags: [] });\n  //     }\n  //     allStudents.push(student);\n  //   })\n  //   // return allStudents;\n  //   setAllData(allStudents)\n  //   setFilteredData(allStudents);\n  //   context.setList(allStudents);\n  // }\n  \n\n  //Populate the context list with API response\n  useEffect(() => {\n    // parallelAPIrequests()\n    api.getStudents()\n        .then(response => response.json())\n        .then(res => {\n          res.students.forEach(student => {\n            if (!allData.includes(student)) {\n              student.tags = [];\n              student.average = student.grades.reduce((a, b) => Number(a) + Number(b)) / student.grades.length;\n              allData.push(student)\n            }\n          })\n            context.setList(allData)\n        })\n        // .then(initializeTags(allData))\n        .catch(error => {\n            console.log('Error getting data: ' + error);\n        })\n  }, \n  []);\n\n//   async function fetchStudents() {\n//     // Later, this if statement can be changed based on business requirements\n//     if (allData.length > 0) {\n//         return;\n//     }\n//     try {\n//         let data;\n//         if (cache.current[\"studentsAPI\"]) {\n//             data = cache.current[\"studentsAPI\"];\n//         } else {\n//             data = await api.getStudents();\n//             cache.current[\"studentsAPI\"] = data;\n//         }\n//         console.log(cache)\n//         const studentsWithTags = initializeTags(data.students);\n//         setAllData((prev) => [...prev, ...studentsWithTags]);\n//         context.setList(cache.current.studentsAPI.students);\n//     } catch (err) {\n//         return;\n//     }\n// }\n\n// async function parallelAPIrequests() {\n//     try {\n//         const fetchFunctions = [fetchStudents()];\n//         await Promise.all(fetchFunctions);\n//     } catch (err) {\n//         return;\n//     }\n// }\n// console.log(allData)\n\n  return (\n    <div>\n      <Form>\n        <Form.Control className=\"search-form\" type=\"name\" placeholder=\"Search by name\"\n          style={{border: \"none\"}}\n          onChange={(event) => handleSearch(event)}\n        />\n      </Form>\n      <Form>\n        <Form.Control className=\"search-form\" type=\"name\" placeholder=\"Search by tag\"\n          style={{border: \"none\"}}\n          onChange={(event) => handleSearchTag(event)}\n        //   onChange={(e) => {\n        //   setTagSearch(e.target.value.toLowerCase().trim());\n        // }}\n        />\n      </Form>\n    </div>\n  )\n}\n\nexport default SearchStudent;","import React from \"react\"\nimport Container from 'react-bootstrap/Container'\nimport DisplayStudents from \"../DisplayStudents\"\nimport SearchStudent from \"../Search/SearchStudent\"\nimport './index.css'\n\nfunction StudentContainer() {\n    return(\n        <Container>\n            <SearchStudent />\n            <DisplayStudents />\n        </Container>\n    ) \n}\n\nexport default StudentContainer;","import React from \"react\";\nimport \"./App.css\";\nimport StudentContainer from \"./components/StudentsContainer/Index\";\nimport { StudentProvider } from \"./utils/StudentContext\";\n\nfunction App() {\n\n  return (\n    <div className=\"d-flex align-items-center justify-content-center\" style={{height: \"100vh\", backgroundColor: \"lightgrey\", alignItems: \"center\", justifyContent: \"center\"}}>\n      <StudentProvider>\n        <StudentContainer />\n      </StudentProvider>\n    </div>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}